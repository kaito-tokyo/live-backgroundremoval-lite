name: "Tests"

on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "main"

concurrency:
  group: "${{ github.workflow }}-${{ github.ref }}"
  cancel-in-progress: true

defaults:
  run:
    shell: "bash"

permissions:
  contents: "read"
  packages: "write"

jobs:
  RunTests:
    name: "Run Tests on ${{ matrix.os-name }}"
    strategy:
      matrix:
        include:
          - os: macos-15
            os-name: macOS
            preset: macos-testing-ci
          - os: windows-2022
            os-name: Windows
            preset: windows-testing-ci-x64
          - os: ubuntu-24.04
            os-name: Ubuntu
            preset: ubuntu-testing-ci-x86_64
      fail-fast: false

    runs-on: ${{ matrix.os }}
    timeout-minutes: 30

    env:
      VCPKG_BINARY_SOURCES: "clear;nuget,https://nuget.pkg.github.com/kaito-tokyo/index.json,readwrite"
      VCPKG_ROOT: "${{ github.workspace }}/vcpkg"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v5"

      - name: "Checkout vcpkg repository"
        uses: "actions/checkout@v5"
        with:
          repository: "microsoft/vcpkg"
          path: "${{ env.VCPKG_ROOT }}"

      - name: "Bootstrap vcpkg"
        if: runner.os != 'Windows'
        working-directory: "${{ env.VCPKG_ROOT }}"
        run: |
          cd "${{ env.VCPKG_ROOT }}"
          ./bootstrap-vcpkg.sh

      - name: "Bootstrap vcpkg (Windows)"
        if: runner.os == 'Windows'
        working-directory: "${{ env.VCPKG_ROOT }}"
        shell: "pwsh"
        run: |
          cd "${{ env.VCPKG_ROOT }}"
          .\bootstrap-vcpkg.bat

      - name: "Setup .NET"
        uses: "actions/setup-dotnet@v4"
        with:
          dotnet-version: '8.0.x'

      - name: "Install dependencies on macOS"
        if: runner.os == 'macOS'
        run: |
          brew install mono

      - name: "Install dependencies on Ubuntu"
        if: runner.os == 'Linux'
        run: |
          echo "man-db man-db/auto-update boolean false" | sudo debconf-set-selections
          sudo apt-get remove --purge -y man-db
          sudo add-apt-repository -y ppa:obsproject/obs-studio
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            libgles2-mesa-dev \
            obs-studio \
            qt6-base-dev \
            libqt6svg6-dev \
            qt6-base-private-dev \
            cmake \
            git \
            jq \
            ninja-build \
            pkg-config \
            mono-devel

      - name: "Setup NuGet Credentials on Windows"
        shell: pwsh
        run: |
          $NUGET_EXE_PATH = & "${{ env.VCPKG_ROOT }}/vcpkg" fetch nuget | Select-Object -Last 1
          
          & $NUGET_EXE_PATH sources add `
            -Source "https://nuget.pkg.github.com/kaito-tokyo/index.json" `
            -StorePasswordInClearText `
            -Name "GitHub" `
            -UserName "kaito-tokyo" `
            -Password "${{ secrets.GITHUB_TOKEN }}"

      - name: "Setup NuGet Credentials on macOS / Linux"
        if: runner.os != 'Windows'
        run: |
          mono "$($VCPKG_ROOT/vcpkg fetch nuget | tail -n1)" sources add \
            -Source "https://nuget.pkg.github.com/kaito-tokyo/index.json" \
            -StorePasswordInClearText \
            -Name "GitHub" \
            -UserName "kaito-tokyo" \
            -Password "${{ secrets.GITHUB_TOKEN }}"

      - name: "Configure"
        run: "cmake --preset ${{ matrix.preset }}"

      - name: "Build"
        run: "cmake --build --preset ${{ matrix.preset }}"
        
      - name: "Run tests"
        run: "ctest --preset ${{ matrix.preset }} --verbose"
